# -*- coding: utf-8 -*-
"""simple_chatbot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wKwvIPzSySBAVZFA5zK7wBYgBySmWXNf 
"""

# Install necessary libraries
!pip install gTTS  # Install the gTTS library for text-to-speech functionality

# Import required libraries
import random  # For selecting random responses
from gtts import gTTS  # Google Text-to-Speech for voice generation
from IPython.display import Audio, display  # To play audio in Jupyter Notebook
import ipywidgets as widgets  # To create interactive widgets for chat

# Conversational text data with a friendly tone and hashtags for engagement
conversation = """
Hey there! #Hello #FriendlyVibes
Hey! How’s your day going? #ChitChat #GoodVibes
Pretty good, thanks! How about you? #FeelingGood #PositiveEnergy
I'm doing great, just chilling. What’s up? #Relaxing #ChillMode
Not much, just looking for a chat. #CasualTalk #JustChatting
Cool! I’m here for it. Got something on your mind? #ReadyToTalk #OpenEars
Do you like music? #MusicLover #GroovyVibes
Absolutely! I love all kinds of music. How about you? #MusicIsLife #AllGenres
I’m into pop and rock. #PopRock #FavoriteGenres
Nice! Those are awesome genres. Got any favorite artists? #MusicTaste #FanTalk
Yeah, I love Imagine Dragons. #ImagineDragons #RockOn
Great choice! Their songs are so catchy and energetic. #GoodTaste #MusicLove
Do you watch movies? #MovieNight #CinemaVibes
Oh, totally! I’m a big movie fan. What’s your favorite genre? #MovieBuff #GenreTalk
I love action and adventure movies. #ActionPacked #AdventureTime
Awesome! Nothing like a good adrenaline rush. Any favorites? #AdrenalineJunkie #EpicMovies
Yeah, I really enjoyed Avengers: Endgame. #MarvelFan #EpicFinale
Classic! That one’s an epic ride from start to finish. #Blockbuster #SuperheroSaga
Thanks for chatting with me! #Grateful #NiceTalk
No problem! Anytime! Have a great day! #HappyToChat #TakeCare
Goodbye. #SeeYouLater #GoodbyeVibes
Catch you later! Take care! #StayAwesome #ByeForNow
"""

# Split the text into pairs of sentences for conversation mapping
lines = [line.strip() for line in conversation.split('\n') if line.strip()]  # Remove empty lines and whitespace
pairs = list(zip(lines[:-1], lines[1:]))  # Create pairs of consecutive lines as question-response pairs

# Create a dictionary to store responses for each prompt
response_dict = {}

# Populate the dictionary with prompt-response pairs
for pair in pairs:
    prompt, response = pair  # Unpack each pair into prompt and response
    if prompt not in response_dict:
        response_dict[prompt] = []  # Initialize a list for new prompts
    response_dict[prompt].append(response)  # Add the response to the list of possible responses

# Function to generate speech and play it
def speak(text):
    tts = gTTS(text=text, lang='en')  # Convert text to speech using gTTS
    tts.save('response.mp3')  # Save the audio file
    display(Audio('response.mp3', autoplay=True))  # Play the audio file automatically

# Chat function to generate responses based on user input
def chat(input_text):
    # Get a list of responses from the dictionary or use a default message
    responses = response_dict.get(input_text, ["Oops! I’m not sure how to respond to that. #ConfusedBot #Help"])
    response = random.choice(responses)  # Select a random response from the list
    output_box.value = f"Bot: {response}"  # Update the output box with the response
    speak(response)  # Generate speech for the response

# Handle button click or "Enter" key press for sending messages
def on_send_message(_):
    user_input = text_input.value.strip()  # Get user input and remove extra whitespace
    if user_input.lower() == 'exit':  # Check if the user wants to exit
        output_box.value = "Bot: Catch you later! Take care! #Goodbye #StayPositive"
        speak("Catch you later! Take care!")  # Say the farewell message
    else:
        chat(user_input)  # Generate a response for the input
    text_input.value = ''  # Clear the input field after sending

# Text input widget for entering messages
text_input = widgets.Text(
    placeholder="Type your message here...",  # Placeholder text for input box
    layout=widgets.Layout(width='50%')  # Set the width of the input box
)
text_input.on_submit(on_send_message)  # Trigger send on "Enter" key press

# Send button widget to manually send messages
send_button = widgets.Button(
    description="Send",  # Button label
    button_style='info'  # Button color and style
)
send_button.on_click(on_send_message)  # Trigger send on button click

# Output text area widget to display the bot's responses
output_box = widgets.Textarea(
    value="Bot: Hey there! How’s your day going? #Hello #FriendlyVibes",  # Initial greeting message
    disabled=True,  # Make the output box read-only
    layout=widgets.Layout(width='50%', height='100px')  # Set size of the output box
)

# Display the text input, send button, and output box on the screen
display(text_input, send_button, output_box)

# Speak the initial greeting message
speak("Hey there! How’s your day going?")

