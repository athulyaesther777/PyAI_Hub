# -*- coding: utf-8 -*-
"""interview_pyai.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IK8wkmklhUXfq74mnGTbVoVbP6CXHCaN

1 How to find the hypotenuse of a triangle?

Uses the Pythagorean theorem to calculate the hypotenuse. The math.hypot() function returns the square root of the sum of squares of the given values.
"""

import math  # Import the math module to use mathematical functions

# Take input for the lengths of the two sides
l = float(input("Enter l: "))  # Length of one side
b = float(input("Enter b: "))  # Length of the other side

# Calculate the hypotenuse using math.hypot()
h = math.hypot(l, b)

# Print the calculated hypotenuse
print("The hypotenuse:", round(h,1))

h = math.sqrt(l**2 + b**2)
print("The hypotenuse:", round(h,1))

"""2. How to find the maximum element in a list?

Uses map() to convert input strings to integers and max() to find the highest value.
"""

# Take a list of numbers as input from the user
numbers = list(map(int, input("Enter numbers separated by spaces: ").split()))
print("numbers:", numbers)

# Find the maximum number using the max() function
largest = max(numbers)

# Print the largest number
print("Largest number is:", largest)

"""3. How to sort a list in ascending and descending order?
python

Uses sorted() to sort the list. The reverse=True parameter sorts in descending order.

"""

# Define a list of numbers
numbers = [5, 1, 3, 7, 2]

# Sort the list in ascending order using sorted()
ascending = sorted(numbers)

# Sort the list in descending order using sorted() with reverse=True
descending = sorted(numbers, reverse=True)

# Print both sorted lists
print("Ascending:", ascending)
print("Descending:", descending)

"""4. How to remove duplicates from a list?
python

Uses a set to remove duplicates and converts it back to a list.

"""

# Create a list with duplicate elements
numbers = [1, 2, 3, 1, 2, 4]

# Use set() to remove duplicates and convert back to a list
unique_numbers = list(set(numbers))

# Print the list with unique elements
print("Unique elements:", unique_numbers)

"""5. How to find the length of a list or tuple?

Uses the len() function to count the number of elements.
"""

# Define a list of numbers
numbers = [10, 20, 30, 40]

# Get the length of the list using len()
length = len(numbers)

# Print the length
print("Length of list:", length)

"""6. How to concatenate two lists?

Uses the + operator to combine two lists.
"""

# Create two lists to be concatenated
list1 = [1, 2, 3]
list2 = [4, 5, 6]

# Concatenate using the + operator
result = list1 + list2

# Print the concatenated list
print("Concatenated list:", result)

"""7. How to find the index of an element in a list?

Uses index() to find the position of an element.

"""

# Define a list of numbers
numbers = [10, 20, 30, 40]

# Find the index of a specific element using index()
index = numbers.index(30)

# Print the index of the element
print("Index of 30:", index)

"""8. How to reverse a string in Python?

Uses slicing with a step of -1 to reverse the string.


"""

# Input a string from the user
text = "Python"

# Reverse the string using slicing
reversed_text = text[::-1]

# Print the reversed string
print("Reversed string:", reversed_text)

"""9. How to count the occurrence of a character in a string?

Uses count() to count how many times the character appears.

"""

# Define a string to count characters in
text = "hello world"

# Count the occurrences of a specific character
count_l = text.count('l')

# Print the count result
print("Occurrences of 'l':", count_l)

"""10. How to find the factorial of a number using recursion?

Uses recursion to calculate the factorial by multiplying the current number with the factorial of the previous number.
"""

# Define a recursive function to find the factorial
def factorial(n):
    # Base case: factorial of 0 or 1 is 1
    if n == 0 or n == 1:
        return 1
    # Recursive call: n * factorial of (n - 1)
    else:
        return n * factorial(n - 1) # 5 * (4!=> 4x3x2x1)

# Take user input and calculate factorial
num = int(input("Enter a number: "))
print("Factorial:", factorial(num))

"""11. How to check if a string is a palindrome?

Compares the original string with its reversed version


"""

# Take a string input from the user
text = input("Enter a string: ")

# Check if the string is the same forwards and backwards
if text == text[::-1]:
    print("Palindrome")
else:
    print("Not a palindrome")

"""12. How to merge two dictionaries?

Uses dictionary unpacking to merge two dictionaries.


"""

# Define two dictionaries to merge
dict1 = {'a': 1, 'b': 2}
dict2 = {'c': 3, 'd': 4}

# Merge dictionaries using dictionary unpacking
merged = {**dict1, **dict2}

# Print the merged dictionary
print("Merged dictionary:", merged)

"""13. How to find the intersection of two sets?

 Uses intersection() to find common elements between two sets.

"""

# Define two sets
set1 = {1, 2, 3, 4}
set2 = {3, 4, 5, 6}

# Find the intersection using intersection() method
intersection = set1.intersection(set2)

# Print the intersection
print("Intersection:", intersection)

"""14. How to check if a number is prime?

Uses a loop to check divisibility from 2 to the square root of the number.

"""

# Input a number to check for primality
num = int(input("Enter a number: "))

# Check if the number is greater than 1 (prime numbers start from 2)
if num > 1:
    for i in range(2, int(num ** 0.5) + 1):
        if num % i == 0:
            print(num, "is not prime")
            break
    else:
        print(num, "is prime")
else:
    print(num, "is not prime")

